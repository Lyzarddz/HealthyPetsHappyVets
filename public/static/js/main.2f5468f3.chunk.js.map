{"version":3,"sources":["Components/NavBar.jsx","Components/CreatePet.jsx","Components/MainPg.jsx","Components/CreateRecord.jsx","Components/Login.jsx","Components/Signup.jsx","Components/PetCard.jsx","Components/PetList.jsx","Components/RecordCard.jsx","Components/RecordList.jsx","Components/EditRecord.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paddingLeft","green","backgroundColor","NavBar","loggedIn","setLoggedIn","classes","navigate","useNavigate","logout","fetch","method","className","AppBar","position","Toolbar","Typography","variant","Button","color","to","component","Link","href","onClick","CreatePet","addPet","user","setLoadVet","vets","loadVet","chosenVet","setChosenVet","useState","name","species","age","vet_id","owner_id","formData","setFormData","errors","setErrors","newVetId","setNewVetId","handleChange","event","target","value","console","log","useEffect","then","resp","json","data","Form","onSubmit","e","preventDefault","JSON","parse","newPet","headers","Accept","credentials","body","stringify","res","ok","Group","widths","Input","label","placeholder","onChange","type","FormControl","sx","minWidth","InputLabel","id","Select","labelId","MenuItem","newVet","document","getElementById","alert","MainPg","myStyles","backgroundImage","height","backgroundSize","backgroundRepeat","paddingTop","style","CreateRecord","addRecord","chosenPet","setChosenPet","pets","loadPets","vaccine","prevention","altered","notes","date","pet_id","newRecord","r","Login","loginUser","username","password","owner","htmlFor","Signup","PetCard","pet","deletePet","vetParse","vet","vetName","disableElevation","PetList","cards","map","p","idx","Card","RecordCard","record","deleteRecord","updateRecord","handleDeleteRecordClick","RecordList","petClone","recordsList","forEach","records","push","EditRecord","get","App","currentUser","setCurrentUser","petLoad","setPetLoad","recordLoad","setRecordLoad","v","loadRecords","updatedRecord","current","filter","path","element","onLogin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.2f5468f3.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PetsIcon from '@mui/icons-material/Pets';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    paddingLeft: 10\n  },\n  green: {\n    backgroundColor: \"#8fbc8f\"\n  }\n}));\n\nfunction NavBar( {loggedIn,  setLoggedIn}) {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\nfunction logout() {\nfetch('/logout', {\n  method: 'DELETE',\n})\nsetLoggedIn(false)\n    navigate(\"/\");\n}\n\n  function loggedInLinks(){\n    return (\n      <div>\n         <Button color=\"inherit\" to=\"/\" component={ Link }>Home </Button> \n         <Button color=\"inherit\" to=\"/pets\" component={ Link }>My Pets</Button>  \n         <Button color=\"inherit\" to=\"/createPet\" component={ Link }>Add Pet</Button>  \n           <a href=\"#\" className=\"logout\" onClick={logout}>Logout\n           </a> \n      </div>\n    )\n  }\n\n  function loggedOutLinks(){\n    return(\n      <div >\n          <Button color=\"inherit\" to=\"/\" component={ Link }>Home </Button> \n          <Button color=\"inherit\" to=\"/login\" component={ Link }>Login</Button> \n          <Button color=\"inherit\" to=\"/signup\" component={ Link } >Sign Up</Button> \n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.green}>\n        <Toolbar>\n            <PetsIcon/>\n          <Typography variant=\"h6\" className={classes.title}>\n              Healthy Pets, Happy Vets!\n          </Typography>\n          { loggedIn ? loggedInLinks() :  loggedOutLinks()}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst CreatePet = ({\n  addPet,\n  user,\n  setLoadVet,\n  vets,\n  loadVet,\n  chosenVet,\n  setChosenVet\n}) => {\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    species: \"\",\n    age: \"\",\n    vet_id: \"\",\n    owner_id: \"\"\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [newVetId, setNewVetId] = useState({\n    name: \"\"\n  });\n\nconsole.log(vets)\n\n\n  useEffect(() => {\n    fetch(\"/vets\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        setLoadVet(data);\n      });\n  }, []);\n\n  function loadVetToForm(vet) {\n    setLoadVet([vet, ...loadVet]);\n  }\n\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleVetFormChange(event) {\n    setNewVetId({\n      ...newVetId,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleSubmitVet(e) {\n    e.preventDefault();\n\n    const newVet = newVetId;\n\n    console.log(newVet);\n\n    fetch(\"/vets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(newVet)\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((newVet) => {\n          loadVetToForm(newVet);\n          document.getElementById(\"checkFix\").value = \"\";\n          alert(\"Vet has been added successfully\");\n        });\n      } else {\n        document.getElementById(\"checkFix\").value = \"\";\n        res.json().then((json) => setErrors(json.errors));\n      }\n    });\n  }\n\n  const { name, species, age } = formData;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const owner_id = user[\"id\"];\n\n    const vet_id = JSON.parse(chosenVet[0])[\"id\"];\n\n    const newPet = {\n      name,\n      species,\n      age,\n      owner_id,\n      vet_id\n    };\n\n    fetch(\"/pets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(newPet)\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((newPet) => {\n          addPet(newPet);\n        });\n      } else {\n        res.json().then((json) => setErrors(json.errors));\n      }\n    });\n    navigate(`/pets`);\n  }\n\n  function handleVetChange(event) {\n    setChosenVet([event.target.value]);\n  }\n\n  return (\n    <div className=\"primary\">\n      <h1>Add a Pet!</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            label=\"Name\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Species\"\n            placeholder=\"Species\"\n            name=\"species\"\n            value={formData.species}\n            onChange={handleChange}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Age\"\n            placeholder=\"Age\"\n            name=\"age\"\n            type=\"text\"\n            value={formData.age}\n            onChange={handleChange}\n          />\n          <br></br>\n\n          <FormControl sx={{ minWidth: 120 }}>\n            <InputLabel id=\"demo-simple-select-label\">Vet</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              name=\"chosenVet\"\n              value={chosenVet}\n              label=\"Vet\"\n              onChange={handleVetChange}\n            >\n              <MenuItem key={-1} value={\"none\"}>\n                Please Select Vet\n              </MenuItem>\n              {vets}\n            </Select>\n          </FormControl>\n          <br></br>\n          <br></br>\n        </Form.Group>\n        <Form.Button className=\"btn\">Submit</Form.Button>\n        <br />\n        <br />\n        <br />\n      </Form>\n      <div>\n        <Form onSubmit={handleSubmitVet}>\n          <h3>Don't see your Vet? Add below</h3>\n          <Form.Input\n            placeholder=\"Vet Name\"\n            name=\"name\"\n            id=\"checkFix\"\n            value={newVetId.name}\n            onChange={handleVetFormChange}\n          />\n          <br />\n          <Form.Button className=\"btn\">Submit</Form.Button>\n        </Form>\n        <h1>{errors}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePet;","\nconst MainPg = ({ loggedIn }) => {\n\n    const myStyles = {\n        backgroundImage: `url(\"https://user-images.githubusercontent.com/91993983/203647488-68f8e164-1def-4f46-aeb5-ea49ce683c76.jpeg\")`,\n        height:'100vh',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        paddingLeft: 40,\n        paddingTop: 40.\n    }\n\n    function loggedInDisplay(){\n        return (\n            <div style={myStyles} className=\"largeText\"> \n            No matter the pet, \n            <br/>\n            We are here to help \n            <br/>\n            keep track of their \n            <br/> \n            health!\n            <br/>\n             <br/>\n            <br/>\n            <br/>\n             <div className=\"smallText\">\n             Head to the Pets page \n             <br/>\n             to get started!\n             </div>\n            <br/>\n            </div>\n        )\n      }\n\n      function loggedOutDisplay(){\n        return(\n            <div style={myStyles} className=\"largeText\"> \n            No matter the pet, \n            <br/>\n            We are here to help \n            <br/>\n            keep track of their \n            <br/> \n            health!\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <div className=\"smallText\">\n            Signup or Login to begin!\n            </div>\n          </div>\n        )\n      }\n\n    return (\n        <div>\n             { loggedIn ? loggedInDisplay() :  loggedOutDisplay()}\n        </div>\n    )\n}\n\nexport default MainPg;","import React, { useState, useEffect } from 'react';\nimport { Form } from \"semantic-ui-react\";\nimport { useNavigate } from 'react-router-dom';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\n\nconst CreateRecord = ({ addRecord , chosenPet, setChosenPet, pets, loadPets }) => {\n\n  useEffect(()=>{\n    loadPets()\n  },[])\n  \n  const [errors, setErrors] = useState([])\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    vaccine: \"\",\n    prevention: \"\",\n    altered: \"\",\n    notes: \"\",\n    date: \"\",\n    pet_id: \"\",\n  });\n\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  }\n\nconst {vaccine, prevention, altered, notes, date} = formData;\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\nconst pet_id = JSON.parse(chosenPet[0])[\"id\"];\n\n  const newRecord = {\n    vaccine,\n    prevention,\n    altered,\n    notes,\n    date,\n    pet_id\n };\n\n fetch(\"/records\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify(newRecord),\n  })\n  .then((res) => {\n    if (res.ok){\n      res.json().then(r => {\n        addRecord(r)\n        navigate(\"/records/\");\n      })\n    } else {\n      res.json().then(json => setErrors(json.errors))\n    }\n  })\n}\n\nfunction handlePetChange(event) {\n  setChosenPet([event.target.value]);\n}\n\n    return (\n         <div className='primary'>\n          <h1>{errors}</h1>\n          <br/>\n      <h1 >Add new Record!</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group widths=\"equal\">\n        <br></br>\n      <FormControl sx={{ minWidth: 120 }}>\n            <InputLabel id=\"demo-simple-select-label\">Pet</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              name=\"chosenPet\"\n              value={chosenPet}\n              label=\"Pet\"\n              onChange={handlePetChange} >\n              <MenuItem key={-1} value={\"none\"}>\n                Please Select Pet\n              </MenuItem>\n              {pets}\n            </Select>\n          </FormControl>\n          <br></br>\n          <br></br>\n          <Form.Input\n            label=\"Vaccine(s)\"\n            placeholder=\"Vaccine(s)\"\n            name=\"vaccine\"\n            value={formData.vaccine}\n            onChange={handleChange}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Prevention\"\n            placeholder=\"Prevention\"\n            name=\"prevention\"\n            value={formData.prevention}\n            onChange={handleChange}\n          />\n          <br/>  \n          <Form.Input\n            label=\"Altered\"\n            placeholder=\"Altered\"\n            name=\"altered\"\n            value={formData.altered}\n            onChange={handleChange}\n          />\n           <br></br>\n          <Form.Input \n            label=\"Notes\"\n            placeholder=\"Notes\"\n            name=\"notes\"\n            value={formData.notes}\n            onChange={handleChange}\n          />\n           <br></br>\n           <Form.Input\n            label=\"Date\"\n            placeholder=\"Date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n          />\n           <br></br>\n        </Form.Group>\n        <Form.Button className=\"btn\">Submit</Form.Button>\n          <br/>\n          <br/>\n          <br/>\n          </Form>\n    </div>\n    )\n    }\n\nexport default CreateRecord;","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Login = ({ loginUser, loadPets}) => {\n  \n    const navigate = useNavigate();\n    const [errors, setErrors] = useState([])\n    const [formData, setFormData] = useState({\n      username:'',\n      password:''\n  })\n\n  const {username, password} = formData;\n  \n  function handleSubmit(e){\n    e.preventDefault();\n\n    const owner = {\n      username,\n      password\n    }\n\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(owner)\n    }) \n    .then(res => {\n      if(res.ok){\n          res.json().then(owner => {\n              loginUser(owner)\n              loadPets()\n              navigate((`/pets/`))\n              \n          })\n      }else {\n\n        res.json().then(json => setErrors(json.errors))\n      }\n  })\n}   \n\n  const handleChange = (e) => {\n  const { name, value } = e.target\n  setFormData({ ...formData, [name]: value })\n}\n\n    return (\n      <div className='primary'>\n      <h1>{errors}</h1>\n      <h1> Log In </h1> \n        <form onSubmit={ handleSubmit }>\n          <div>\n            <label htmlFor=\"username\">Username: </label>\n            <input type=\"text\" name=\"username\" id=\"username\" onChange={ handleChange } value={ username } />\n          </div>\n          <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input type=\"text\" name=\"password\" id=\"password\" value={password} onChange={handleChange} />\n        </div> \n          <br></br>\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    )\n  }\n  \n  export default Login","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\n const Signup = ({loginUser }) => {\n  \n  const navigate = useNavigate();\n\n  const [errors, setErrors] = useState([])\n  const [formData, setFormData] = useState({\n    username:'',\n    password:''\n})\n\nconst {username, password} = formData;\n\n  function handleSubmit(e){\n    e.preventDefault();\n\n    const owner = {\n      username,\n      password\n    }\n\n    fetch('/owners', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({owner})\n    }) \n    .then(res => {\n      if(res.ok){\n          res.json().then(owner => {\n            loginUser(owner)\n            navigate((`/pets`))\n          })\n      } else {\n        res.json().then(json => setErrors(json.errors))\n      }\n  })\n}\n\nconst handleChange = (e) => {\n  const { name, value } = e.target\n  setFormData({ ...formData, [name]: value })\n}\n\n  return ( \n    <div className='primary'>\n      <h1>{errors}</h1>\n    <h1> Create Account </h1> \n    <form onSubmit={ handleSubmit}>\n      <div>\n        <label htmlFor=\"username \">Username: </label>\n        <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={handleChange} />\n        </div>   \n        <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input type=\"text\" name=\"password\" id=\"password\" value={password} onChange={handleChange} />\n        </div> \n        <br></br>\n        <input type=\"submit\" value=\"Create Account\"/>\n    </form>\n    </div>\n  )\n} \n\nexport default Signup","\n\nimport React from 'react';\nimport Card from '@mui/material/Card';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\n\nconst PetCard = ( { pet , deletePet } ) => {\n\nconst vetParse =  pet ? pet.vet : \"\"\nconst vetName = pet ? vetParse.name : \"\"\n\nfunction handleDeletePetClick(e){\n  e.preventDefault();\n\n  const {id} = pet;\n\n  fetch(`/pets/${id}`, {\n    method: 'DELETE',\n  })\n  deletePet(id);\n}\n\n  return (\n    <Card variant=\"outlined\">\n        <div className=\"content\" >\n        </div>\n        <h3>\n        <div className=\"extra content\" >\n            <ul>\n            Name: {pet ? pet.name : \"\" }\n              <br/>\n            Species: {pet ? pet.species : \"\"}\n            <br></br>\n             Age: {pet ? pet.age : \"\"}    \n           <br></br>\n            Vet: {vetName}\n            </ul>\n            <Button variant=\"outlined\" color=\"inherit\" onClick={handleDeletePetClick} disableElevation > \n            <DeleteIcon /> Delete Pet</Button> \n        </div>\n        </h3>\n    </Card>\n  )\n}\n\nexport default PetCard;\n\n\n\n","import React from 'react'\nimport { Card } from \"semantic-ui-react\";\nimport PetCard from './PetCard';\nimport {  useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst PetList = ( { pet , deletePet , loadPets } ) => {\n  \n  useEffect(()=>{\n    loadPets()\n  },[])\n\n    const cards= pet.map((p, idx)=> {\n        return(\n          <div key={idx}>\n            <PetCard\n            key={idx}\n            pet={p}\n            deletePet={deletePet}\n            loadPets={loadPets}\n          />\n          </div>\n        )\n    })  \n  \n    return (\n      <Card>\n        <h1 className='primary'>My Pets</h1>\n        <Button  className=\"primary\" variant=\"contained\" to=\"/createPet\" component={ Link } disableElevation>\n     Add New Pet\n    </Button>\n    <br></br>\n    <br></br>\n    <br></br>\n        <Button variant=\"outlined\" color=\"inherit\" to={`/records`} component={ Link } >Records</Button>\n        <br></br>\n        <br></br>\n        <br></br>\n          {cards}\n    <br/>\n    <br/>\n      </Card>\n    )\n  }\n  \n  export default PetList;","import React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Form } from \"semantic-ui-react\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst RecordCard = ({ record , deleteRecord, loadPets, updateRecord } ) => {\n\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState([]);\n  const [formData, setFormData] = useState({\n    vaccine: \"\",\n    prevention: \"\",\n    altered: \"\",\n    notes: \"\",\n    date: \"\",\n  });\n\n  const {id} = record;\n\n  function handleDeleteRecordClick(e){\n    e.preventDefault();\n  \n    fetch(`/records/${id}`, { \n      method: 'DELETE',\n    })\n    deleteRecord(id);\n    loadPets(); \n  }\n\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  function handleEditRecordClick(e) {\n    e.preventDefault();\n  \n   fetch(`/records/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    })\n    .then(res => {\n      if(res.ok){\n        res.json().then(updateRecord(id))\n        alert(\"Record updated successfully\");\n        navigate((`/records`))\n      } else {\n        res.json().then(json => setErrors(json.errors))\n      }\n    })\n  }\n\n  return (\n    <div>\n    <Card variant=\"outlined\">  \n    {errors}\n        <div className=\"content\" >\n        </div>\n        <h1>Pet: {record.pet.name}</h1>\n        <h3>\n        <Form.Input\n            label=\"Date\"\n            placeholder={record.date}\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n          />\n        <div className=\"extra content\" >\n          <ul>\n         <br/>\n         <Form.Input\n            label=\"Vaccine:\"\n            placeholder={record.vaccine}\n            name=\"vaccine\"\n            value={formData.vaccine}\n            onChange={handleChange}\n          />\n              <br/>\n              <Form.Input\n            label=\"Prevention:\"\n            placeholder={record.prevention}\n            name=\"prevention\"\n            value={formData.prevention}\n            onChange={handleChange}\n          />\n            <br></br>\n            <Form.Input\n            label=\"Altered Information:\"\n            placeholder={record.altered}\n            name=\"altered\"\n            value={formData.altered}\n            onChange={handleChange}\n          />\n           <br></br>\n           <Form.Input \n            label=\"Notes:\"\n            placeholder={record.notes}\n            name=\"notes\"\n            value={formData.notes}\n            onChange={handleChange}\n          />\n           <br/>\n           <br/>\n           <Button  className=\"primary\" variant=\"contained\" onClick={handleEditRecordClick} disableElevation>\n              Save</Button>\n              <br/>\n              <br></br>\n              <Button variant=\"outlined\" color=\"inherit\" onClick={handleDeleteRecordClick} disableElevation > \n            <DeleteIcon onClick={handleDeleteRecordClick} /> Delete Record</Button> \n           <br/>\n            </ul>\n        </div>\n        </h3>\n    </Card>\n    </div>\n  )\n}\n\nexport default RecordCard;\n","import React from 'react'\nimport { Card } from \"semantic-ui-react\";\nimport RecordCard from './RecordCard';\nimport { useEffect } from 'react';\nimport { Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst RecordList = ( { deleteRecord, pet, loadPets, updateRecord } ) => {\n\nuseEffect(()=>{\n  loadPets()\n},[])\n\nconst petClone = JSON.parse(JSON.stringify(pet));\n\nlet recordsList = []\n\npetClone.forEach((e) => {      //reverses order of data so Record is top level\n  e.records.forEach((record) => {\n    record.pet = e                \n    recordsList.push(record)\n  })\n})\n\n    const cards= recordsList.map((r, idx)=> {\n        return (\n          <div key={r.id}>\n            <RecordCard\n            key={r.id}\n            record={r}\n            updateRecord={updateRecord}\n            deleteRecord ={deleteRecord}\n            loadPets = {loadPets}\n          />\n          </div>\n        )\n    })  \n  \n    return (\n      <Card>\n        <h1 className='primary'>My Records</h1>\n            <br/>\n            <br/>\n    <Button  className=\"primary\" variant=\"contained\" to=\"/createRecord\" component={ Link } disableElevation>\n     Add New Record\n    </Button>\n    <br></br>\n    {cards}\n      </Card>\n    )\n  }\n  \n  export default RecordList;","import React, { useState, useEffect } from 'react';\nimport { Form } from \"semantic-ui-react\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst EditRecord = ({ loadPets, updateRecord, pet }) => {\n\nconst [errors, setErrors] = useState([])\nconst navigate = useNavigate();\nconst [formData, setFormData] = useState({\n  vaccine: \"\",\n  prevention: \"\",\n  altered: \"\",\n  notes: \"\",\n  date: \"\",\n});\n\nuseEffect(() => {\n  loadPets()\n},[])\n\nconst petClone = JSON.parse(JSON.stringify(pet));\n\nlet recordsList = []\n\npetClone.forEach((e) => {      //reverses order of data so Record is top level\n  e.records.forEach((record) => {\n    record.pet = e                \n    recordsList.push(record)\n  })\n})\n\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  }\n\nconsole.log(recordsList)\n\n  const record = recordsList.map((r, idx) => {\n     const properRecord = r\n  })\n\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const id = record.get();\n\n fetch(`/records/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  })\n  .then(res => {\n    if(res.ok){\n      res.json().then(updateRecord(id))\n      navigate((`/records`))\n    } else {\n      res.json().then(json => setErrors(json.errors))\n    }\n  })\n}\n\n    return (\n         <div className='primary'>\n          <h1>{errors}</h1>\n      <h1 >Edit Record</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group widths=\"equal\">\n        <br></br>\n          <br></br>\n          <Form.Input\n            label=\"Vaccine(s)\"\n            placeholder=\"Vaccine(s)\"\n            name=\"vaccine\"\n            value={formData.vaccine}\n            onChange={handleChange}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Prevention\"\n            placeholder=\"Prevention\"\n            name=\"prevention\"\n            value={formData.prevention}\n            onChange={handleChange}\n          />\n          <br/>  \n          <Form.Input\n            label=\"Altered\"\n            placeholder=\"Altered\"\n            name=\"altered\"\n            value={formData.altered}\n            onChange={handleChange}\n          />\n           <br></br>\n          <Form.Input\n            label=\"Notes\"\n            placeholder=\"Notes\"\n            name=\"notes\"\n            value={formData.notes}\n            onChange={handleChange}\n          />\n           <br></br>\n           <Form.Input\n            label=\"Date\"\n            placeholder=\"Date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n          />\n           <br></br>\n        </Form.Group>\n        <Form.Button className=\"btn\">Submit</Form.Button>\n          <br/>\n          <br/>\n          <br/>\n          </Form>\n    </div>\n    )\n    }\n\nexport default EditRecord;","import NavBar from './Components/NavBar';\nimport CreatePet from './Components/CreatePet';\nimport MainPg from './Components/MainPg';\nimport CreateRecord from './Components/CreateRecord';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport StyleSheet from './Components/StyleSheet';\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport PetList from './Components/PetList';\nimport RecordList from './Components/RecordList';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditRecord from './Components/EditRecord';\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState('');\n  const [loggedIn, setLoggedIn]  = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [petLoad, setPetLoad] = useState([]);\n  const [recordLoad, setRecordLoad] = useState([]);\n  const [loadVet, setLoadVet] = useState([]);\n  const [chosenVet, setChosenVet] = useState(\"\");\n  const [chosenPet, setChosenPet] = useState(\"\");\n\n  useEffect(() => {\n    // auto-login\n    fetch('/me').then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setCurrentUser(user));\n        setLoggedIn(true);\n      }\n    });\n  }, []);\n\nconst vets = loadVet.map((v,idx) => {   \n  return (\n    <MenuItem key={idx} value={JSON.stringify(v)}>\n      {v.name} \n      </MenuItem>\n  )\n})\n\nconst pets = petLoad.map((p,idx) => {   \n  return (\n    <MenuItem key={idx} value={JSON.stringify(p)}>\n      {p.name} \n      </MenuItem>\n  )\n})\n\nfunction loadPets() {\n \nconst {id} = currentUser\n\nfetch(`/owners/${id}`, {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\", \n    \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n  },\n  credentials: \"include\"\n})\n.then(res => {\n  if(res.ok){\n      res.json().then(pets => {\n          setPetLoad(pets.pets)\n      })\n  }else {\n    console.log(res)\n    res.json().then(json => setErrors(json.errors))\n  }\n})\n}\n\nfunction loadRecords() {\n\nconsole.log(petLoad[0][\"id\"])\n\n  fetch(`/records/`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\", \n    },\n  })\n  .then(res => {\n    if(res.ok){\n        res.json().then(records => {\n          console.log(records)\n            setRecordLoad(records)\n        })\n    }else {\n      console.log(res)\n      res.json().then(json => setErrors(json.errors))\n    }\n  })\n  }\n\n  function addPet(pet){\n    setPetLoad([pet,...petLoad])\n  }\n\n  function addRecord(record){\n    setRecordLoad([record,...recordLoad])\n  }\n\n  function updateRecord(updatedRecord){\n     setRecordLoad(current => {\n      return current.map(record => {\n        if (record.id === updatedRecord.id) {\n          return updatedRecord\n        } else {\n            return record\n          }\n    })\n  })\n}\n\n  function loginUser (user) {\n    setCurrentUser(user); \n    setLoggedIn(true);\n  }\n\n const deleteRecord = (id) => {setRecordLoad(current => current.filter(r => r.id !== id))}\n\n const deletePet = (id) => {setPetLoad(current => current.filter(p => p.id !== id))}\n\n  return (\n    <Router>\n    <NavBar loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n    <Routes>\n     <Route path=\"/\" element= {<MainPg loggedIn={loggedIn }/>} />\n     <Route path=\"/login\" element= {<Login onLogin={setCurrentUser} loginUser={loginUser} setLoggedIn={setLoggedIn}  loadPets={loadPets} />} />\n     <Route path=\"/signup\"  element= {<Signup pet={petLoad} loginUser={loginUser} />} />\n     <Route path=\"/createRecord\"  element= {<CreateRecord pets={pets}  loadPets={loadPets} chosenPet={chosenPet} setChosenPet={setChosenPet} user={currentUser} addRecord={addRecord} pet={petLoad}/>} />\n     <Route path=\"/createPet\"  element= {<CreatePet user={currentUser} chosenVet={chosenVet} setChosenVet={setChosenVet} vets={vets}loadVet={loadVet} setLoadVet={setLoadVet}  addPet={addPet}/>} />\n     <Route path=\"/pets\"  element= {<PetList loadPets={loadPets} deletePet={deletePet} chosenVet={chosenVet} currentUser={currentUser} setCurrentUser={setCurrentUser} pet={petLoad} />} />\n     <Route path='/records'  element= {<RecordList updateRecord={updateRecord} loadPets={loadPets} user={currentUser} pet={petLoad} deleteRecord={deleteRecord} loadRecords={loadRecords} record={recordLoad} />} />\n     <Route path=\"/editRecord\"  element= {<EditRecord loadPets={loadPets} updateRecord={updateRecord} user={currentUser} pet={petLoad} deleteRecord={deleteRecord} loadRecords={loadRecords} record={recordLoad} />} />\n    </Routes>\n    </Router> \n  \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}